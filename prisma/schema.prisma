datasource db {
  provider = "mongodb" // ใช้ MongoDB เป็นฐานข้อมูล
  url      = env("DATABASE_URL") // ดึง URL ฐานข้อมูลจาก .env
}

generator client {
  provider = "prisma-client-js" // ใช้ Prisma Client (สำหรับ Node.js/TS)
}

model Admin {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId // ObjectId ของแอดมิน
  adminID  String  @unique // รหัสแอดมิน
  username String  @unique // ชื่อผู้ใช้ (ห้ามซ้ำ)
  name     String? // ชื่อจริง (optional)
  password String // รหัสผ่าน (เก็บแบบเข้ารหัส)

  createdAt DateTime @default(now()) // วันที่สร้าง
  updatedAt DateTime @updatedAt // วันที่แก้ไขล่าสุด

  createdRooms Room[] @relation("RoomCreatedBy") // ห้องที่สร้างโดยแอดมินนี้
  updatedRooms Room[] @relation("RoomUpdatedBy") // ห้องที่แก้ไขโดยแอดมินนี้
  createdBills Bill[] @relation("BillCreatedBy") // บิลที่สร้างโดยแอดมินนี้
  updatedBills Bill[] @relation("BillUpdatedBy") // บิลที่แก้ไขโดยแอดมินนี้
}

model User {
  id     String @id @default(auto()) @map("_id") @db.ObjectId // ObjectId ของผู้ใช้
  userId String @unique // รหัสผู้ใช้ (unique สำหรับระบบ line liff)
  mumId  String // เลขบัตรประชาชน / รหัสนักศึกษา
  name   String // ชื่อจริงผู้เช่า
  phone  String // เบอร์โทรศัพท์

  bookings Booking[] // ห้องที่ผู้ใช้จอง
  bills    Bill[] // บิลที่ผู้ใช้ได้รับ

  createdAt DateTime @default(now()) // วันที่สมัคร
  updatedAt DateTime @updatedAt // วันที่แก้ไขล่าสุด
}

model Room {
  id         String @id @default(auto()) @map("_id") @db.ObjectId // ObjectId ของห้อง
  number     String @unique // หมายเลขห้อง (ไม่ซ้ำ)
  size       String // ขนาดห้อง
  rent       Int // ค่าเช่าห้อง
  deposit    Int // เงินมัดจำ
  bookingFee Int // ค่าจองห้อง
  status     Int // สถานะห้อง (0 = ว่าง, 1 = มีคนอยู่)

  createdBy   String  @db.ObjectId // id แอดมินที่สร้าง 
  createdName String // ✅ ชื่อแอดมินที่สร้าง
  updatedBy   String? @db.ObjectId // id แอดมินที่แก้ไข (nullable)
  updatedName String? // ✅ ชื่อแอดมินที่แก้ไข (nullable)

  creator Admin  @relation("RoomCreatedBy", fields: [createdBy], references: [id])
  updater Admin? @relation("RoomUpdatedBy", fields: [updatedBy], references: [id])

  bookings Booking[]
  Bill     Bill[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Booking {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId // ObjectId ของการจอง
  userId   String    @db.ObjectId // ผู้เช่า (FK -> User)
  roomId   String    @db.ObjectId // ห้อง (FK -> Room)
  checkin  DateTime // วันที่เข้าพัก
  checkout DateTime? // วันที่ย้ายออก (nullable)
  status   Int // สถานะ (0 = active, 1 = checkout_requested, 2 = checked_out)

  paymentId String?  @unique @db.ObjectId // การจ่ายเงิน (One-to-One)
  payment   Payment? @relation(fields: [paymentId], references: [id]) // ความสัมพันธ์กับ Payment

  user User @relation(fields: [userId], references: [id]) // ผู้ใช้ที่ทำการจอง
  room Room @relation(fields: [roomId], references: [id]) // ห้องที่ถูกจอง

  createdAt DateTime @default(now()) // วันที่สร้าง
  updatedAt DateTime @updatedAt // วันที่แก้ไขล่าสุด
}

model Bill {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  number String // เลขที่บิล

  roomId     String @db.ObjectId
  room       Room   @relation(fields: [roomId], references: [id])
  roomNumber String // ✅ snapshot เลขห้องตอนออกบิล
  month      DateTime

  rent    Int
  service Int
  wBefore Int
  wAfter  Int
  wUnits  Int
  wPrice  Int
  eBefore Int
  eAfter  Int
  eUnits  Int
  ePrice  Int
  fine    Int
  total   Int
  slipUrl String?
  status  Int

  userId      String  @db.ObjectId
  user        User    @relation(fields: [userId], references: [id])

  createdBy   String  @db.ObjectId
  createdName String
  updatedBy   String? @db.ObjectId
  updatedName String?

  creator     Admin   @relation("BillCreatedBy", fields: [createdBy], references: [id])
  updater     Admin?  @relation("BillUpdatedBy", fields: [updatedBy], references: [id])

  paymentId String?  @unique @db.ObjectId
  payment   Payment? @relation(fields: [paymentId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Payment {
  id      String @id @default(auto()) @map("_id") @db.ObjectId // ObjectId ของการจ่ายเงิน
  amount  Int // จำนวนเงินที่จ่าย
  slipUrl String // URL สลิปโอนเงิน
  status  Int // สถานะการจ่าย (0 = paid, 1 = pending)

  booking Booking? // การจองที่เกี่ยวข้อง (optional)
  bill    Bill? // บิลที่เกี่ยวข้อง (optional)

  createdAt DateTime @default(now()) // วันที่สร้าง
  updatedAt DateTime @updatedAt // วันที่แก้ไขล่าสุด
}
