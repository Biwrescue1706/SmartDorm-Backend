generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Admin {
  adminId   String   @id @default(auto()) @map("_id") @db.ObjectId
  username  String   @unique // ชื่อผู้ใช้
  name      String // ชื่อจริง
  password  String // รหัสผ่าน
  role      Int      @default(1) // ✅ 0 = แอดมินหลัก, 1 = พนักงาน
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // ความสัมพันธ์กับ Room / Bill
  roomsCreated Room[] @relation("RoomCreatedBy")
  roomsUpdated Room[] @relation("RoomUpdatedBy")
  billsCreated Bill[] @relation("BillCreatedBy")
  billsUpdated Bill[] @relation("BillUpdatedBy")
}

model Room {
  roomId     String   @id @default(auto()) @map("_id") @db.ObjectId
  number     String   @unique //เลขห้อง
  size       String //ขนาดของห้อง
  rent       Int //ค่าเช่าห้อง
  deposit    Int //ค่าประกันห้อง
  bookingFee Int //ค่าจองห้อง
  status     Int // 0 = ว่าง, 1 = ไม่ว่าง
  createdAt  DateTime @default(now())
  createdBy  String   @db.ObjectId //สร้างโดยใคร
  updatedAt  DateTime @updatedAt
  updatedBy  String?  @db.ObjectId //แก้ไขโดยใคร

  // ความสัมพันธ์กับแอดมิน
  adminCreated Admin? @relation("RoomCreatedBy", fields: [createdBy], references: [adminId])
  adminUpdated Admin? @relation("RoomUpdatedBy", fields: [updatedBy], references: [adminId])

  // ความสัมพันธ์กับ Booking / Bill
  bookings Booking[]
  bills    Bill[]
}

model Customer {
  customerId String   @id @default(auto()) @map("_id") @db.ObjectId
  userId     String // LINE LIFF userId
  userName   String // LINE LIFF displayName
  ctitle     String // คำนำหน้าชื่อ
  cname      String //ชื่อ
  csurname   String //นามสกุล
  fullName   String // ชื่อเต็ม ctitle + cname + csurname
  cphone     String //เบอรโทร
  cmumId     String //บัตรประชาชน
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  bookings Booking[]
  bills    Bill[]
  Payment  Payment[]
}

model Booking {
  bookingId    String    @id @default(auto()) @map("_id") @db.ObjectId
  roomId       String    @db.ObjectId
  customerId   String    @db.ObjectId
  slipUrl      String?
  checkin      DateTime
  checkout     DateTime?
  status       Int  // 0=รอ, 1=เข้าพัก, 2=คืน
  returnStatus Int?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  room     Room     @relation(fields: [roomId], references: [roomId])
  customer Customer @relation(fields: [customerId], references: [customerId])
}

model Bill {
  billId String   @id @default(auto()) @map("_id") @db.ObjectId
  month  DateTime

  // ✅ ค่าต่าง ๆ
  rent         Int // ค่าเช่าห้อง (ดึงจาก Booking.Room)
  service      Int @default(20) // ค่าส่วนกลาง
  wBefore      Int
  wAfter       Int
  wUnits       Int
  wPrice       Int @default(19)
  waterCost    Int @default(0) // ✅ ค่าน้ำรวม (wUnits * wPrice)
  eBefore      Int
  eAfter       Int
  eUnits       Int
  ePrice       Int @default(7)
  electricCost Int @default(0) // ✅ ค่าไฟรวม (eUnits * ePrice)

  fine        Int @default(0) // ✅ ค่าปรับรวมทั้งหมด (overdueDays * 50)
  overdueDays Int @default(0) // ✅ จำนวนวันที่เกินกำหนด

  total   Int      @default(0) // ✅ รวมยอดทั้งหมด rent + service + waterCost + electricCost + fine
  slipUrl String
  status  Int      @default(0) // 0=ยังไม่ชำระ, 1=ชำระแล้ว
  dueDate DateTime // ✅ วันครบกำหนด (วันที่ 5 ของเดือนถัดไป)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // FK -> Room
  roomId String @db.ObjectId
  room   Room   @relation(fields: [roomId], references: [roomId])

  // FK -> Customer
  customerId String   @db.ObjectId
  customer   Customer @relation(fields: [customerId], references: [customerId])

  // FK -> Admin
  createdBy    String  @db.ObjectId
  updatedBy    String? @db.ObjectId
  adminCreated Admin?  @relation("BillCreatedBy", fields: [createdBy], references: [adminId])
  adminUpdated Admin?  @relation("BillUpdatedBy", fields: [updatedBy], references: [adminId])

  payment Payment?
}

model Payment {
  paymentId  String   @id @default(auto()) @map("_id") @db.ObjectId
  billId     String   @unique @db.ObjectId
  customerId String   @db.ObjectId
  slipUrl    String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  bill     Bill     @relation(fields: [billId], references: [billId])
  customer Customer @relation(fields: [customerId], references: [customerId])
}
